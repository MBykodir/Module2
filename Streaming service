#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Структура для представлення медіа-елемента (фільму, музичного треку тощо)
typedef struct {
    char title[100]; // Назва медіа-елемента
    int duration; // Тривалість медіа-елемента в хвилинах
} MediaElement;

// Структура для представлення користувача
typedef struct {
    char username[50]; // Ім'я користувача
    char email[100]; // Електронна пошта користувача
    char password[50]; // Пароль користувача
} User;

// Функція для створення нового користувача
User* createUser(const char* username, const char* email, const char* password) {
    User* user = (User*)malloc(sizeof(User));
    if (user == NULL) {
        return NULL;
    }
    strcpy(user->username, username);
    strcpy(user->email, email);
    strcpy(user->password, password);
    return user;
}

// Структура для представлення списку користувачів
typedef struct {
    User** users;
    int count;
} UserList;

// Функція для створення нового списку користувачів
UserList* createUserList() {
    UserList* userList = (UserList*)malloc(sizeof(UserList));
    if (userList == NULL) {
        return NULL;
    }
    userList->users = NULL;
    userList->count = 0;
    return userList;
}

// Функція для додавання користувача до списку користувачів
int addUserToUserList(UserList* userList, const char* username, const char* email, const char* password) {
    User* user = createUser(username, email, password);
    if (user == NULL) {
        return 0; // Помилка при створенні користувача
    }
    // Збільшимо розмір списку користувачів і додамо нового користувача
    userList->count++;
    userList->users = (User**)realloc(userList->users, sizeof(User*) * userList->count);
    if (userList->users == NULL) {
        return 0; // Помилка при реалокації пам'яті для списку користувачів
    }
    userList->users[userList->count - 1] = user;
    return 1; // Успішно додано користувача
}

// Головна функція
int main() {
    // Створення списку користувачів
    UserList* userList = createUserList();

    // Додавання користувачів
    addUserToUserList(userList, "JohnDoe", "johndoe@example.com", "password123");
    addUserToUserList(userList, "AliceSmith", "alice@example.com", "secret456");

    // Виведення інформації про користувачів
    for (int i = 0; i < userList->count; i++) {
        User* user = userList->users[i];
        printf("Username: %s\n", user->username);
        printf("Email: %s\n", user->email);
        printf("Password: %s\n", user->password);
    }

    // Звільнення пам'яті
    for (int i = 0; i < userList->count; i++) {
        free(userList->users[i]);
    }
    free(userList->users);
    free(userList);

    return 0;
}
